/*! This theme rides a Hoverboard (http://gethoverboard.com/) */

/*
 * FONTS
 */

@font-face {
font-family: 'Roboto2014_black';
    src: url('../fonts/roboto-black-webfont.eot');
    src: url('../fonts/roboto-black-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/roboto-black-webfont.woff2') format('woff2'),
         url('../fonts/roboto-black-webfont.woff') format('woff'),
         url('../fonts/roboto-black-webfont.ttf') format('truetype'),
         url('../fonts/roboto-black-webfont.svg#robotoblack') format('svg');
    font-style: normal;

}

@font-face {
    font-family: 'Roboto2014';
    src: url('../fonts/roboto-regular-webfont.eot');
    src: url('../fonts/roboto-regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/roboto-regular-webfont.woff2') format('woff2'),
         url('../fonts/roboto-regular-webfont.woff') format('woff'),
         url('../fonts/roboto-regular-webfont.ttf') format('truetype'),
         url('../fonts/roboto-regular-webfont.svg#robotoregular') format('svg');
    font-weight: normal;
    font-style: normal;

}


@font-face {
    font-family: 'Roboto2014';
    src: url('../fonts/roboto-italic-webfont.eot');
    src: url('../fonts/roboto-italic-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/roboto-italic-webfont.woff2') format('woff2'),
         url('../fonts/roboto-italic-webfont.woff') format('woff'),
         url('../fonts/roboto-italic-webfont.ttf') format('truetype'),
         url('../fonts/roboto-italic-webfont.svg#robotoitalic') format('svg');
    font-weight: normal;
    font-style: italic;

}


@font-face {
    font-family: 'Roboto2014';
    src: url('../fonts/roboto-bold-webfont.eot');
    src: url('../fonts/roboto-bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/roboto-bold-webfont.woff2') format('woff2'),
         url('../fonts/roboto-bold-webfont.woff') format('woff'),
         url('../fonts/roboto-bold-webfont.ttf') format('truetype'),
         url('../fonts/roboto-bold-webfont.svg#robotobold') format('svg');
    font-weight: bold;
    font-style: normal;

}

@font-face {
    font-family: 'Roboto2014';
    src: url('..fonts/roboto-bolditalic-webfont.eot');
    src: url('..fonts/roboto-bolditalic-webfont.eot?#iefix') format('embedded-opentype'),
         url('..fonts/roboto-bolditalic-webfont.woff2') format('woff2'),
         url('..fonts/roboto-bolditalic-webfont.woff') format('woff'),
         url('..fonts/roboto-bolditalic-webfont.ttf') format('truetype'),
         url('..fonts/roboto-bolditalic-webfont.svg#robotobold_italic') format('svg');
    font-weight: bold;
    font-style: italic;

}




/*
 * DEPENDENCIES
 *****************************************************************************/

@import "../../../hoverboard/assets/less/hoverstrap.less";
@import "variables.less";

// Overrides the font path here to allow quick updates to variables.less
@icon-font-path: "../../../hoverboard/bower_components/bootstrap/fonts/";



/*
 * CUSTOM THEME STYLES
 *****************************************************************************/

// == Common Styles
// Example:
// @import "header.less";

// == Page-Specific Styles
// Example:
// @import "front-page.less";

.full-sized-image {
  position: relative;
  display: block;
  height: 600px;
  z-index: 1;

  /*
   * The & refers to the selector (.full-sized-image) that it sits inside. This
   * is the same as targeting .full-sized-image::after
   *
   * This is a pseudo-element. For more info on pseudo-elements, 
   * see https://developer.mozilla.org/en-US/docs/Web/CSS/::after
   */
  &::after {
    content: '';
    position: absolute;
    top: 0; left: 0;
    height: 100%; width: 100%;

    /*
     * Using fade(color, amount) lets you adjust a color's opacity.
     * See http://lesscss.org/functions/#color-operations-fade for details.
     */
    background: fade(@gray-darker, 50%);

    /* The overlay should be above the image, but below the text. */
    z-index: 5;
  }

  h1,h2,h3,p {
    position: relative;

    /* Text should sit on top of everything, so it has the highest z-index. */
    z-index: 10;
  }

  /*
   * The > is to specify that only direct children should be targeted.
   *
   * Example:

    <div class="full-sized-image">
      
      <!--
       This H2 will be targeted because its parent (wrapping element) 
       is `.full-sized-image`.
      -->
      <h2>Child/direct descendant.</h2>

      <div>
        <!--
         This H2 will NOT be targeted because it's inside a second div.
        -->
        <h2>Indirect descendant.</h2>
      </div>

    </div>

   */
  >h2 {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: block;
    width: 100%;
    margin: 0;
    color: @gray-lighter;
    font-size: 100px;
    text-align: center;
    text-shadow: 2px 2px @gray;
    text-transform: uppercase;
  }

  h3 {
    font-size: 60px;
  }

  img {
    position: relative;
    max-width: 100%;

    /* This should sit behind the gradient overlay, so the z-index is lower. */
    z-index: 2;
  }
}

.gradient-overlay {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    /* 
     * Note that this is considered an image, not a color. Not important, but 
     * it can trip you up if you try to set background-color instead.
     *
     * It's a bit heavy, but the details are here:
     * https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient
     *
     * The easiest way to understand gradient functions is to just create a div
     * and play with the settings to see what they do.
     */
    background-image: linear-gradient(
      to right,
      fade(@gray-darker, 90%),
      fade(@gray-darker, 80%) 45%,
      fade(@gray-darker, 0%)
    );
    border-bottom: 1px solid @gray-darker;
    z-index: 9;
  }

  /* I'm using color variables from variables.less; feel free to change. */
  h1,h2,h3,p {
    color: @gray-lighter;
    text-shadow: 2px 2px 1px @gray-darker;
  }

  /*
   * line-height is how you control vertical spacing. It's how you would 
   * specify single- or double-spacing, for example.
   */
  h1 {
    font-size: 100px;
    line-height: 1;
  }

  h2 {
    margin-top: 10px;
    font-size: 45px;
    line-height: 1;
  }

  p {
    margin-top: 30px;
    font-size: 25px;
    line-height: 1.25;
  }
}


.about-me-header {
  position: absolute;
  width: 50%;
  top: 25%;
  left: 8%;
  text-shadow: 2px 2px #B6B6B6;
  z-index: 10;
}

.text-box {
  position: relative;

  /*
   * This isn't required, but having a minimum height for the white boxes helps
   * the visual flow.
   */
  min-height: 600px;
  padding: 50px 20px;
  background: white;
  z-index: 10;
}

.text-wrap {
  display: block;

  /* Makes sure the text doesn't go too wide to be easily legible. */
  max-width: 900px;

  /*
   * Setting the left and right margins to "auto" means an element that's
   * display: block will center in its container element. (In this case, 
   * .text-box is the parent.)
   */
  margin: 0 auto;

  p {
    font-size: 18px;
  }
}

/* This is the scrolling arrow */

/* the wrapper element that will become the outer circle */
.arrow-wrap {
  position:absolute;
  z-index:15;
  left: 50%;
  top: 0;
  transform: translate3d(-50%, -50%, 0);
  margin-left:-5em;
  background:#111;
  width:10em;
  height:10em;
  padding:4em 2em;
  border-radius:50%;
  font-size:0.5em;
  display:block;
  border: 1px solid fade(@gray-lighter, 25%);
  box-shadow:0px 0px 5px 0px #333;
}

/* a triangle to make the main part of the arrow. Adjust the border-color to fit your needs */
.arrow {
  float:left;
  position:relative;
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 3em 3em 0 3em;
  border-color: #ffffff transparent transparent transparent;
  -webkit-transform:rotate(360deg);/* added for better anti-aliasing on webkit browsers */
}

/* a pseudo element arrow placed on top of the other one with the same color as the wrapper */
.arrow:after {
  content:'';
  position:absolute;
  top:-3.2em;
  left:-3em;
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 3em 3em 0 3em;
  border-color: #111 transparent transparent transparent;
  -webkit-transform:rotate(360deg);/* added for better anti-aliasing on webkit browsers */
}

/* UP ARROW navigation style */

/* the wrapper element that will become the outer circle */
.arrow-wrap-top {
  position:relative;
  z-index:1;
  left:50%;
  top:0em;
  margin-left:-5em;
  background:#111;
  width:10em;
  height:10em;
  padding:3em 2em;
  border-radius:50%;
  font-size:0.5em;
  display:block;
  box-shadow:0px 0px 5px 0px #333;
}

/* a triangle to make the main part of the arrow. Adjust the border-color to fit your needs */
.arrow-top {
  float:left;
  position:relative;
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 3em 3em 0 3em;
  border-color: #ffffff transparent transparent transparent;
  -webkit-transform:rotate(180deg);/* added for better anti-aliasing on webkit browsers */
}

/* a pseudo element arrow placed on top of the other one with the same color as the wrapper */
.arrow-top:after {
  content:'';
  position:absolute;
  top: -3.2em;
  left: -3em;
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 3em 3em 0 3em;
  border-color: #111 transparent transparent transparent;
  -webkit-transform:rotate(360deg);/* added for better anti-aliasing on webkit browsers */
}
